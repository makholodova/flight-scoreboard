@{
	ViewData["Title"] = "Города";
}


<div class="container ">
	<div class="row ">
		<div class="col-sm">Города</div>
		<div class="col"></div>
	</div>
	<div id="cities"></div>
	<button id="create-city">Создать новый город</button>
</div>


<div id="dialog-form" title="Создать новый город">
	<p class="validateTips">Заполните форму</p>

	<form>
		<fieldset>
			<label for="name">Наименование города</label>
			<input type="text" name="name" id="newCityName" class="text ui-widget-content ui-corner-all">
			<input type="submit" tabindex="-1" style="position:absolute; top:-1000px">
		</fieldset>
	</form>
</div>

@section Scripts{
	<script type="text/javascript">
   function deleteCity (id){   
                     let url = "https://localhost:44322/CityNew/delete/" ;
                    $.post( url, { id: id},function( data ) {
                       $('#city_row_' + id).remove();
                    } );
     } 
         
     $(document).ready(
          function (){  
             function createCity (){   
                        let url = "https://localhost:44322/CityNew/create/" ;
                        let cityName=$("#newCityName").val();    
                        $.post( url, { name: cityName}, function( data ) {
                           $( "#cities " ).append( 
                              createCityRow(cityName, data)
                           );
                           $( "#dialog-form" ).dialog( "close" );
                       } );
                  }
                  
                  function createCityRow (name,id){
                       let city="<div  class='city col'>" + name + "</div>";
                       let deleteCity=`<div class='delete col'>
                                           <a href='javascript:void(0);' onclick='deleteCity(${id})'>Удалить</a>
                                       </div>`;
                       return  `<div id='city_row_${id}' class='row'>${city} ${deleteCity}</div>`;
                  }
                  
             let cityAPI = "https://localhost:44322/CityNew/all";
             $.getJSON( cityAPI, function( data ) {
                let cities = "";
                $.each( data, function( index, val ) {
                    let row = createCityRow(val.name,val.id)
                    cities += row; 
                });
                                
                $('#cities').html(cities);
             }); 
             
              let dialog, form,
                name = $( "#newCityName" ),
                allFields = $( [] ).add( name ),
                tips = $( ".validateTips" );
           
              function updateTips( t ) {
                tips
                  .text( t )
                  .addClass( "ui-state-highlight" );
                setTimeout(function() {
                  tips.removeClass( "ui-state-highlight", 1500 );
                }, 500 );
              }
           
              function checkStringLength( str, strName, min, max ) {
                if ( str.val().length > max || str.val().length < min ) {
                  str.addClass( "ui-state-error" );
                  updateTips( "Название " + strName + " должно содержать количество символов от " +
                    min + " до " + max + "." );
                  return false;
                } else {
                  return true;
                }
              }
           
              function addUser() {
                allFields.removeClass( "ui-state-error" );
                let valid = checkStringLength( name, "города", 2, 25 );
                if ( valid ) { 
                  createCity();
                }
              
                return valid;
              }
           
              dialog = $( "#dialog-form" ).dialog({
                autoOpen: false,
                height: 400,
                width: 350,
                modal: true,
                buttons: {
                  "Создать": addUser,
                  "Отмена": function() {
                    dialog.dialog( "close" );
                  }
                },
                close: function() {
                  form[ 0 ].reset();
                  allFields.removeClass( "ui-state-error" );
                }
              });
           
              form = dialog.find( "form" ).on( "submit", function( event ) {
                event.preventDefault();
                addUser();
              });
           
              $( "#create-city" ).button().on( "click", function() {
                dialog.dialog( "open" );
              });
          }
     )  
    </script>
}